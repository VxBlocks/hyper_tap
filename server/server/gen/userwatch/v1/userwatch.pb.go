// Copyright 2020-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: userwatch/v1/userwatch.proto

package userwatchv1

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserWatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WatchUserId   string                 `protobuf:"bytes,5,opt,name=watch_user_id,json=watchUserId,proto3" json:"watch_user_id,omitempty"`
	LowerPrice    float32                `protobuf:"fixed32,6,opt,name=lower_price,json=lowerPrice,proto3" json:"lower_price,omitempty"`
	Events        []string               `protobuf:"bytes,7,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserWatch) Reset() {
	*x = UserWatch{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWatch) ProtoMessage() {}

func (x *UserWatch) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWatch.ProtoReflect.Descriptor instead.
func (*UserWatch) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{0}
}

func (x *UserWatch) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserWatch) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserWatch) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserWatch) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserWatch) GetWatchUserId() string {
	if x != nil {
		return x.WatchUserId
	}
	return ""
}

func (x *UserWatch) GetLowerPrice() float32 {
	if x != nil {
		return x.LowerPrice
	}
	return 0
}

func (x *UserWatch) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateUserWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *UserWatch             `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserWatchRequest) Reset() {
	*x = CreateUserWatchRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWatchRequest) ProtoMessage() {}

func (x *CreateUserWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWatchRequest.ProtoReflect.Descriptor instead.
func (*CreateUserWatchRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserWatchRequest) GetPayload() *UserWatch {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateUserWatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *UserWatch             `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserWatchResponse) Reset() {
	*x = CreateUserWatchResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserWatchResponse) ProtoMessage() {}

func (x *CreateUserWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserWatchResponse.ProtoReflect.Descriptor instead.
func (*CreateUserWatchResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserWatchResponse) GetResult() *UserWatch {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateUserWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserWatch     *UserWatch             `protobuf:"bytes,1,opt,name=user_watch,json=userWatch,proto3" json:"user_watch,omitempty"`
	Masks         *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=masks,proto3" json:"masks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserWatchRequest) Reset() {
	*x = UpdateUserWatchRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWatchRequest) ProtoMessage() {}

func (x *UpdateUserWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWatchRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserWatchRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserWatchRequest) GetUserWatch() *UserWatch {
	if x != nil {
		return x.UserWatch
	}
	return nil
}

func (x *UpdateUserWatchRequest) GetMasks() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Masks
	}
	return nil
}

type UpdateUserWatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserWatch     *UserWatch             `protobuf:"bytes,1,opt,name=user_watch,json=userWatch,proto3" json:"user_watch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserWatchResponse) Reset() {
	*x = UpdateUserWatchResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserWatchResponse) ProtoMessage() {}

func (x *UpdateUserWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserWatchResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserWatchResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserWatchResponse) GetUserWatch() *UserWatch {
	if x != nil {
		return x.UserWatch
	}
	return nil
}

type DeleteUserWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserWatchRequest) Reset() {
	*x = DeleteUserWatchRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserWatchRequest) ProtoMessage() {}

func (x *DeleteUserWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserWatchRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserWatchRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteUserWatchRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteUserWatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserWatchResponse) Reset() {
	*x = DeleteUserWatchResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserWatchResponse) ProtoMessage() {}

func (x *DeleteUserWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserWatchResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserWatchResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{6}
}

type ListUserWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserWatchRequest) Reset() {
	*x = ListUserWatchRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWatchRequest) ProtoMessage() {}

func (x *ListUserWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWatchRequest.ProtoReflect.Descriptor instead.
func (*ListUserWatchRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{7}
}

type ListUserWatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*UserWatch           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserWatchResponse) Reset() {
	*x = ListUserWatchResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWatchResponse) ProtoMessage() {}

func (x *ListUserWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWatchResponse.ProtoReflect.Descriptor instead.
func (*ListUserWatchResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{8}
}

func (x *ListUserWatchResponse) GetResults() []*UserWatch {
	if x != nil {
		return x.Results
	}
	return nil
}

type UserWatchMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WatchUserId   string                 `protobuf:"bytes,4,opt,name=watch_user_id,json=watchUserId,proto3" json:"watch_user_id,omitempty"`
	Event         string                 `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	Msg           string                 `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Token         string                 `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	Size          string                 `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	Time          int64                  `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserWatchMsg) Reset() {
	*x = UserWatchMsg{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserWatchMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWatchMsg) ProtoMessage() {}

func (x *UserWatchMsg) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWatchMsg.ProtoReflect.Descriptor instead.
func (*UserWatchMsg) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{9}
}

func (x *UserWatchMsg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserWatchMsg) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserWatchMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserWatchMsg) GetWatchUserId() string {
	if x != nil {
		return x.WatchUserId
	}
	return ""
}

func (x *UserWatchMsg) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *UserWatchMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserWatchMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserWatchMsg) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *UserWatchMsg) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetUserWatchMsgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserWatchMsgRequest) Reset() {
	*x = GetUserWatchMsgRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserWatchMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWatchMsgRequest) ProtoMessage() {}

func (x *GetUserWatchMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWatchMsgRequest.ProtoReflect.Descriptor instead.
func (*GetUserWatchMsgRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserWatchMsgRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserWatchMsgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       *UserWatchMsg          `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserWatchMsgResponse) Reset() {
	*x = GetUserWatchMsgResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserWatchMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWatchMsgResponse) ProtoMessage() {}

func (x *GetUserWatchMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWatchMsgResponse.ProtoReflect.Descriptor instead.
func (*GetUserWatchMsgResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserWatchMsgResponse) GetResults() *UserWatchMsg {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListUserWatchMsgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserWatchMsgRequest) Reset() {
	*x = ListUserWatchMsgRequest{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserWatchMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWatchMsgRequest) ProtoMessage() {}

func (x *ListUserWatchMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWatchMsgRequest.ProtoReflect.Descriptor instead.
func (*ListUserWatchMsgRequest) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserWatchMsgRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListUserWatchMsgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*UserWatchMsg        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserWatchMsgResponse) Reset() {
	*x = ListUserWatchMsgResponse{}
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserWatchMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWatchMsgResponse) ProtoMessage() {}

func (x *ListUserWatchMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userwatch_v1_userwatch_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWatchMsgResponse.ProtoReflect.Descriptor instead.
func (*ListUserWatchMsgResponse) Descriptor() ([]byte, []int) {
	return file_userwatch_v1_userwatch_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserWatchMsgResponse) GetResults() []*UserWatchMsg {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_userwatch_v1_userwatch_proto protoreflect.FileDescriptor

const file_userwatch_v1_userwatch_proto_rawDesc = "" +
	"\n" +
	"\x1cuserwatch/v1/userwatch.proto\x12\fuserwatch.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x12options/gorm.proto\x1a google/protobuf/field_mask.proto\"\xae\x02\n" +
	"\tUserWatch\x12\x18\n" +
	"\x02id\x18\x01 \x01(\x03B\b\xba\xb9\x19\x04\n" +
	"\x02(\x01R\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12,\n" +
	"\auser_id\x18\x04 \x01(\tB\x13\xba\xb9\x19\x0f\n" +
	"\rR\vuser_id_idxR\x06userId\x12\"\n" +
	"\rwatch_user_id\x18\x05 \x01(\tR\vwatchUserId\x12\x1f\n" +
	"\vlower_price\x18\x06 \x01(\x02R\n" +
	"lowerPrice\x12\x16\n" +
	"\x06events\x18\a \x03(\tR\x06events:\x06\xba\xb9\x19\x02\b\x01\"K\n" +
	"\x16CreateUserWatchRequest\x121\n" +
	"\apayload\x18\x01 \x01(\v2\x17.userwatch.v1.UserWatchR\apayload\"J\n" +
	"\x17CreateUserWatchResponse\x12/\n" +
	"\x06result\x18\x01 \x01(\v2\x17.userwatch.v1.UserWatchR\x06result\"\x82\x01\n" +
	"\x16UpdateUserWatchRequest\x126\n" +
	"\n" +
	"user_watch\x18\x01 \x01(\v2\x17.userwatch.v1.UserWatchR\tuserWatch\x120\n" +
	"\x05masks\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\x05masks\"Q\n" +
	"\x17UpdateUserWatchResponse\x126\n" +
	"\n" +
	"user_watch\x18\x01 \x01(\v2\x17.userwatch.v1.UserWatchR\tuserWatch\"(\n" +
	"\x16DeleteUserWatchRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x19\n" +
	"\x17DeleteUserWatchResponse\"\x16\n" +
	"\x14ListUserWatchRequest\"J\n" +
	"\x15ListUserWatchResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.userwatch.v1.UserWatchR\aresults\"\xa3\x02\n" +
	"\fUserWatchMsg\x12\x18\n" +
	"\x02id\x18\x01 \x01(\x03B\b\xba\xb9\x19\x04\n" +
	"\x02(\x01R\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12,\n" +
	"\auser_id\x18\x03 \x01(\tB\x13\xba\xb9\x19\x0f\n" +
	"\rR\vuser_id_idxR\x06userId\x12\"\n" +
	"\rwatch_user_id\x18\x04 \x01(\tR\vwatchUserId\x12\x14\n" +
	"\x05event\x18\x05 \x01(\tR\x05event\x12\x10\n" +
	"\x03msg\x18\x06 \x01(\tR\x03msg\x12\x14\n" +
	"\x05token\x18\a \x01(\tR\x05token\x12\x12\n" +
	"\x04size\x18\b \x01(\tR\x04size\x12\x12\n" +
	"\x04time\x18\t \x01(\x03R\x04time:\x06\xba\xb9\x19\x02\b\x01\"(\n" +
	"\x16GetUserWatchMsgRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"O\n" +
	"\x17GetUserWatchMsgResponse\x124\n" +
	"\aresults\x18\x01 \x01(\v2\x1a.userwatch.v1.UserWatchMsgR\aresults\"2\n" +
	"\x17ListUserWatchMsgRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"P\n" +
	"\x18ListUserWatchMsgResponse\x124\n" +
	"\aresults\x18\x01 \x03(\v2\x1a.userwatch.v1.UserWatchMsgR\aresults2\xe6\x04\n" +
	"\x10UserWatchService\x12`\n" +
	"\x0fCreateUserWatch\x12$.userwatch.v1.CreateUserWatchRequest\x1a%.userwatch.v1.CreateUserWatchResponse\"\x00\x12\\\n" +
	"\vUpUserWatch\x12$.userwatch.v1.UpdateUserWatchRequest\x1a%.userwatch.v1.UpdateUserWatchResponse\"\x00\x12o\n" +
	"\x0fDeleteUserWatch\x12$.userwatch.v1.DeleteUserWatchRequest\x1a%.userwatch.v1.DeleteUserWatchResponse\"\x0f\xba\xb9\x19\v\n" +
	"\tUserWatch\x12Z\n" +
	"\rListUserWatch\x12\".userwatch.v1.ListUserWatchRequest\x1a#.userwatch.v1.ListUserWatchResponse\"\x00\x12`\n" +
	"\x0fGetUserWatchMsg\x12$.userwatch.v1.GetUserWatchMsgRequest\x1a%.userwatch.v1.GetUserWatchMsgResponse\"\x00\x12c\n" +
	"\x10ListUserWatchMsg\x12%.userwatch.v1.ListUserWatchMsgRequest\x1a&.userwatch.v1.ListUserWatchMsgResponse\"\x00B\xa4\x01\n" +
	"\x10com.userwatch.v1B\x0eUserwatchProtoP\x01Z/hyperliquid-server/gen/userwatch/v1;userwatchv1\xa2\x02\x03UXX\xaa\x02\fUserwatch.V1\xca\x02\fUserwatch\\V1\xe2\x02\x18Userwatch\\V1\\GPBMetadata\xea\x02\rUserwatch::V1b\x06proto3"

var (
	file_userwatch_v1_userwatch_proto_rawDescOnce sync.Once
	file_userwatch_v1_userwatch_proto_rawDescData []byte
)

func file_userwatch_v1_userwatch_proto_rawDescGZIP() []byte {
	file_userwatch_v1_userwatch_proto_rawDescOnce.Do(func() {
		file_userwatch_v1_userwatch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_userwatch_v1_userwatch_proto_rawDesc), len(file_userwatch_v1_userwatch_proto_rawDesc)))
	})
	return file_userwatch_v1_userwatch_proto_rawDescData
}

var file_userwatch_v1_userwatch_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_userwatch_v1_userwatch_proto_goTypes = []any{
	(*UserWatch)(nil),                // 0: userwatch.v1.UserWatch
	(*CreateUserWatchRequest)(nil),   // 1: userwatch.v1.CreateUserWatchRequest
	(*CreateUserWatchResponse)(nil),  // 2: userwatch.v1.CreateUserWatchResponse
	(*UpdateUserWatchRequest)(nil),   // 3: userwatch.v1.UpdateUserWatchRequest
	(*UpdateUserWatchResponse)(nil),  // 4: userwatch.v1.UpdateUserWatchResponse
	(*DeleteUserWatchRequest)(nil),   // 5: userwatch.v1.DeleteUserWatchRequest
	(*DeleteUserWatchResponse)(nil),  // 6: userwatch.v1.DeleteUserWatchResponse
	(*ListUserWatchRequest)(nil),     // 7: userwatch.v1.ListUserWatchRequest
	(*ListUserWatchResponse)(nil),    // 8: userwatch.v1.ListUserWatchResponse
	(*UserWatchMsg)(nil),             // 9: userwatch.v1.UserWatchMsg
	(*GetUserWatchMsgRequest)(nil),   // 10: userwatch.v1.GetUserWatchMsgRequest
	(*GetUserWatchMsgResponse)(nil),  // 11: userwatch.v1.GetUserWatchMsgResponse
	(*ListUserWatchMsgRequest)(nil),  // 12: userwatch.v1.ListUserWatchMsgRequest
	(*ListUserWatchMsgResponse)(nil), // 13: userwatch.v1.ListUserWatchMsgResponse
	(*timestamppb.Timestamp)(nil),    // 14: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),    // 15: google.protobuf.FieldMask
}
var file_userwatch_v1_userwatch_proto_depIdxs = []int32{
	14, // 0: userwatch.v1.UserWatch.created_at:type_name -> google.protobuf.Timestamp
	14, // 1: userwatch.v1.UserWatch.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: userwatch.v1.CreateUserWatchRequest.payload:type_name -> userwatch.v1.UserWatch
	0,  // 3: userwatch.v1.CreateUserWatchResponse.result:type_name -> userwatch.v1.UserWatch
	0,  // 4: userwatch.v1.UpdateUserWatchRequest.user_watch:type_name -> userwatch.v1.UserWatch
	15, // 5: userwatch.v1.UpdateUserWatchRequest.masks:type_name -> google.protobuf.FieldMask
	0,  // 6: userwatch.v1.UpdateUserWatchResponse.user_watch:type_name -> userwatch.v1.UserWatch
	0,  // 7: userwatch.v1.ListUserWatchResponse.results:type_name -> userwatch.v1.UserWatch
	14, // 8: userwatch.v1.UserWatchMsg.created_at:type_name -> google.protobuf.Timestamp
	9,  // 9: userwatch.v1.GetUserWatchMsgResponse.results:type_name -> userwatch.v1.UserWatchMsg
	9,  // 10: userwatch.v1.ListUserWatchMsgResponse.results:type_name -> userwatch.v1.UserWatchMsg
	1,  // 11: userwatch.v1.UserWatchService.CreateUserWatch:input_type -> userwatch.v1.CreateUserWatchRequest
	3,  // 12: userwatch.v1.UserWatchService.UpUserWatch:input_type -> userwatch.v1.UpdateUserWatchRequest
	5,  // 13: userwatch.v1.UserWatchService.DeleteUserWatch:input_type -> userwatch.v1.DeleteUserWatchRequest
	7,  // 14: userwatch.v1.UserWatchService.ListUserWatch:input_type -> userwatch.v1.ListUserWatchRequest
	10, // 15: userwatch.v1.UserWatchService.GetUserWatchMsg:input_type -> userwatch.v1.GetUserWatchMsgRequest
	12, // 16: userwatch.v1.UserWatchService.ListUserWatchMsg:input_type -> userwatch.v1.ListUserWatchMsgRequest
	2,  // 17: userwatch.v1.UserWatchService.CreateUserWatch:output_type -> userwatch.v1.CreateUserWatchResponse
	4,  // 18: userwatch.v1.UserWatchService.UpUserWatch:output_type -> userwatch.v1.UpdateUserWatchResponse
	6,  // 19: userwatch.v1.UserWatchService.DeleteUserWatch:output_type -> userwatch.v1.DeleteUserWatchResponse
	8,  // 20: userwatch.v1.UserWatchService.ListUserWatch:output_type -> userwatch.v1.ListUserWatchResponse
	11, // 21: userwatch.v1.UserWatchService.GetUserWatchMsg:output_type -> userwatch.v1.GetUserWatchMsgResponse
	13, // 22: userwatch.v1.UserWatchService.ListUserWatchMsg:output_type -> userwatch.v1.ListUserWatchMsgResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_userwatch_v1_userwatch_proto_init() }
func file_userwatch_v1_userwatch_proto_init() {
	if File_userwatch_v1_userwatch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_userwatch_v1_userwatch_proto_rawDesc), len(file_userwatch_v1_userwatch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userwatch_v1_userwatch_proto_goTypes,
		DependencyIndexes: file_userwatch_v1_userwatch_proto_depIdxs,
		MessageInfos:      file_userwatch_v1_userwatch_proto_msgTypes,
	}.Build()
	File_userwatch_v1_userwatch_proto = out.File
	file_userwatch_v1_userwatch_proto_goTypes = nil
	file_userwatch_v1_userwatch_proto_depIdxs = nil
}
